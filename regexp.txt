\d Любая цифра
\w Алфавитно-цифровой символ
\s Пробельный символ (пробел, табуляция, перевод строки, и т.п.)
\D не цифра
\W не алфавитно-цифровой символ
\S не пробельный символ
. любой символ, кроме перевода строки

==============================
совпадения

console.log(/abc/.test("abcde"));
// true
console.log(/abc/.test("abxde"));
// false

===============================
набор символов

console.log(/[0123456789]/.test("in 1992"));
// true
console.log(/[0-9]/.test("in 1992"));
// true

========================
дата

var dateTime = /\d\d-\d\d-\d\d\d\d \d\d:\d\d/;
console.log(dateTime.test("30-01-2003 15:20"));
// true
console.log(dateTime.test("30-jan-2003 15:20"));
// false
=========================
[\d.] означает любую цифру или точку. 
Заметьте, что точка внутри квадратных скобок теряет своё особое значение и превращается просто в точку. 
То же касается и других специальных символов, типа +.
========================================
Инвертировать набор символов – сказать, что вам надо найти любой символ, кроме тех, что есть в наборе
 – можно, поставив знак ^ сразу после открывающей квадратной скобки.

var notBinary = /[^01]/;
console.log(notBinary.test("1100100010100110"));
// false
console.log(notBinary.test("1100100010200110"));
// true
================================
Если поставить после чего-либо в регулярке знак +, это будет означать, что этот елемент может быть повторён более одного раза. 
\d+ означает одну или несколько цифр.
У звёздочки * значение почти такое же, но она разрешает шаблону присутствовать ноль раз. 
Если после чего-то стоит звёздочка, то оно никогда не препятствует нахождению шаблона в строке – оно просто находится там ноль раз.

console.log(/'\d+'/.test("'123'"));
// true
console.log(/'\d+'/.test("''"));
// false
console.log(/'\d*'/.test("'123'"));
// true
console.log(/'\d*'/.test("''"));
// true
============================

Знак вопроса делает часть шаблона необязательной, то есть она может встретиться ноль или один раз. 
В следующем примере символ u может встречаться, но шаблон совпадает и тогда, когда его нет.

var neighbor = /neighbou?r/;
console.log(neighbor.test("neighbour"));
// true
console.log(neighbor.test("neighbor"));
// true
===========================================
Можно использовать промежутки с открытым концом, опуская одно из чисел. 
{,5} означает, что шаблон может встретиться от нуля до пяти раз, а {5,} – от пяти и более.


var dateTime = /\d{1,2}-\d{1,2}-\d{4} \d{1,2}:\d{2}/;
console.log(dateTime.test("30-1-2003 8:45"));
// true
=============================
Группировка

Чтобы использовать операторы * или + на нескольких элементах сразу, можно использовать круглые скобки. 
Часть регулярки, заключённая в скобки, считается одним элементом с точки зрения операторов.

var cartoonCrying = /boo+(hoo+)+/i;
console.log(cartoonCrying.test("Boohoooohoohooo"));
// true


Первый и второй плюсы относятся только ко вторым буквам о в словах boo и hoo. 
Третий + относится к целой группе (hoo+), находя одну или несколько таких последовательностей.
Буква i в конце выражения делает регулярку нечувствительной к регистру симолов – так, что B совпадает с b.


================================

var match = /\d+/.exec("one two 100");
console.log(match);
// ["100"]
console.log(match.index);
// 8
=====================================
Группировка

var quotedText = /'([^']*)'/;
console.log(quotedText.exec("she said 'hello'"));
// ["'hello'", "hello"]
=====================
граница строка

Если нам надо принудить совпадение взять всю строку целиком, мы используем метки ^ и $. 
^ совпадает с началом строки, а $ с концом. 
^\d+$ совпадает со строкой, состоящей только из одной или нескольких цифр
^! совпадает со сторокой, начинающейся с восклицательного знака
x^ не совпадает ни с какой строчкой (перед началом строки не может быть x)

==================================
граница слово

мы используем метку \b
Границей слова может быть начало или конец строки, или любое место строки, где с одной стороны стоит алфавитно-цифровой символ \w, а с другой – не алфавитно-цифровой.

console.log(/cat/.test("concatenate"));
// true
console.log(/\bcat\b/.test("concatenate"));
// false
=======================
Символ | обозначает выбор между шаблонами слева и справа от него.

var animalCount = /\b\d+ (pig|cow|chicken)s?\b/;
console.log(animalCount.test("15 pigs"));
// true
console.log(animalCount.test("15 pigchickens"));
// false


Скобки ограничивают часть шаблона, к которой применяется |, и можно поставить много таких операторов друг за другом, чтобы обозначить выбор из более чем двух вариантов.
==============================
